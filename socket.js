// http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/
"use strict";

// Optional. You will see this name in eg. 'ps' or 'top' command
process.title = 'node-chat';

// Port where we'll run the websocket server
var webSocketsServerPort = 3006;

// websocket and http servers
var webSocketServer = require('websocket').server;
var http = require('http');

/**
 * Global variables
 */
// latest 100 messages
var history = [];
// list of currently connected clients (users)
var clients = [];

/**
 * Helper function for escaping input strings
 */
function htmlEntities(str) {
    return String(str).replace(/&/g, '&').replace(/>/g, '>').replace(/"/g, '"');
}

// Array with some colors
var colors = ['red', 'green', 'blue', 'magenta', 'purple', 'plum', 'orange'];
// ... in random order
colors.sort(function(a, b) {
    return Math.random() > 0.5;
});

/**
 * HTTP server
 */
var server = http.createServer(function(request, response) {
    // Not important for us. We're writing WebSocket server, not HTTP server
});
server.listen(webSocketsServerPort, function() {
    console.log((new Date()) + " Server is listening on port " + webSocketsServerPort);
});

/**
 * WebSocket server
 */
var wsServer = new webSocketServer({
    // WebSocket server is tied to a HTTP server. WebSocket request is just
    // an enhanced HTTP request. For more info http://tools.ietf.org/html/rfc6455#page-6
    httpServer: server
});

// This callback function is called every time someone
// tries to connect to the WebSocket server
wsServer.on('request', function(request) {
    console.log((new Date()) + ' Connection from origin ' + request.origin + '.');
    var data1 =[];
    for(var i=0; i< 300; i++) {
      data1.push(Math.random()*500+300)
    }
    // accept connection - you should check 'request.origin' to make sure that
    // client is connecting from your website
    // (http://en.wikipedia.org/wiki/Same_origin_policy)
    var connection = request.accept(null, request.origin);
    // we need to know client index to remove them on 'close' event
    var index = clients.push(connection) - 1;
    var userName = false;
    var userColor = false;
    var sflData = [{
        "msgType": "dashboard",
        "data": [{
            "name": "CRB2205",
            "rl": {
                "currentValue": "0",
                "remainValue": "100",
                "yellowWarning": "80",
                "redWarning": "90"
            },
            "rlKm": {
                "currentValue": "0",
                "remainValue": "8000",
                "yellowWarning": "7000",
                "redWarning": "9000",
                "totalKm": 10000
            }
        }, {
            "name": "TRB31306",
            "rl": {
                "currentValue": "0",
                "remainValue": "100",
                "yellowWarning": "80",
                "redWarning": "90"
            },
            "rlKm": {
                "currentValue": "0",
                "remainValue": "100000",
                "yellowWarning": "1000",
                "redWarning": "9000",
                "totalKm": 100000000
            }
        }]
    }, {
        "msgType": "charts",
        "data": [{
            "name": "CRB2205",
            "temp
            "rotationSpeed": data1,
            "acceleration": [-0.00328064, -0.00267029, -0.00343323, -0.00419617, -0.00427246, -0.00427246, -0.0038147, -0.00320435, -0.00312805, -0.00320435, -0.00312805, -0.00297546, -0.00305176, -0.00343323, -0.00450134, -0.00350952, -0.00358582, -0.00328064, -0.00244141, -0.0025177, -0.00213623, -0.00228882, -0.00366211, -0.00297546, -0.00328064, -0.00396729, -0.00389099, -0.0037384, -0.00457764, -0.00404358, -0.00473022, -0.0050354, -0.00495911, -0.00465393, -0.00556946, -0.00556946, -0.00534058, -0.00541687, -0.00602722, -0.00465393, -0.00556946, -0.00465393, -0.00511169, -0.00389099, -0.00465393, -0.00389099, -0.0038147, -0.00366211, -0.00320435, -0.00289917, -0.00213623, -0.00167847, -0.00175476, -0.00167847, -0.00175476, -0.001297, -0.00137329, -0.000915527, -0.000839233, -0.00106812, -0.000610352, -0.0012207, -0.000686646, -0.00175476, -0.00175476, -0.00183105, -0.00190735, -0.00205994, -0.00152588, -0.00274658, -0.00289917, -0.00328064, -0.00366211, -0.0037384, -0.00434875, -0.00480652, -0.00473022, -0.00534058, -0.00572205, -0.00450134, -0.00526428, -0.00465393, -0.00457764, -0.00411987, -0.00389099, -0.00343323, -0.00488281, -0.00404358, -0.00358582, -0.00434875, -0.00419617, -0.00328064, -0.00396729, -0.00320435, -0.00305176, -0.00259399, -0.00396729, -0.00282288, -0.00411987, -0.00305176, -0.00312805, -0.00328064, -0.00221252, -0.00320435, -0.00144958, -0.00167847, -0.00267029, -0.00183105, -0.00221252, -0.00312805, -0.00282288, -0.00297546, -0.00274658, -0.00190735, -0.00160217, -0.00183105, -0.00137329, -0.000915527, -0.00274658, -0.00228882, -0.00282288, -0.00274658, -0.00320435, -0.00144958, -0.00152588, -0.000915527, -0.001297, -0.001297, -0.00106812, -0.00190735, -0.00205994, -0.0025177, -0.00236511, -0.00137329, -0.0025177, -0.000610352, -0.00221252, -0.000991821, -0.00183105, -0.00183105, -0.00267029, -0.00259399, -0.00274658, -0.00267029, -0.00320435, -0.00312805, -0.0037384, -0.00343323, -0.00389099, -0.00442505, -0.00480652, -0.00526428, -0.00511169, -0.00511169, -0.00541687, -0.00427246, -0.00419617, -0.00396729, -0.00473022, -0.00434875, -0.00473022, -0.00411987, -0.00282288, -0.00213623, -0.00198364, -0.00152588, -0.00106812, -0.00267029, -0.00282288, -0.0037384, -0.00434875, -0.00389099, -0.00335693, -0.00213623, -0.000839233, -0.000686646, -0.00038147, -0.00114441, -0.00160217, -0.00244141, -0.00320435, -0.00366211, -0.00419617, -0.00205994, -0.00175476, -7.62939e-5, 0.000534058, 0, -0.0012207, -0.0025177, -0.00358582, -0.00488281, -0.00495911, -0.00442505, -0.0037384, -0.00289917, -0.00190735, -0.00244141, -0.00267029, -0.00366211, -0.00488281, -0.00640869, -0.00656128, -0.00640869, -0.00595093, -0.00457764, -0.00335693, -0.0025177, -0.00221252, -0.00213623, -0.0025177, -0.00411987, -0.00389099, -0.00511169, -0.0050354, -0.00480652, -0.00404358, -0.00366211, -0.00297546, -0.00289917, -0.00358582, -0.00396729, -0.00427246, -0.0062561, -0.00549316, -0.00518799, -0.00595093, -0.00350952, -0.0038147, -0.00320435, -0.00259399, -0.00274658, -0.00335693, -0.00244141, -0.0038147, -0.00274658, -0.00419617, -0.00358582, -0.00274658, -0.00167847, -0.00259399, -0.00190735, -0.00198364, -0.00274658, -0.00282288, -0.00343323, -0.00328064, -0.00282288, -0.00267029, -0.00274658, -0.00282288, -0.00267029, -0.00289917, -0.00259399, -0.00335693, -0.0038147, -0.00167847, -0.0037384, -0.00297546, -0.0025177, -0.00366211, -0.00320435, -0.00289917, -0.00282288, -0.00274658, -0.00259399, -0.0025177, -0.00297546, -0.00305176, -0.00427246, -0.00480652, -0.00480652, -0.00488281, -0.00480652, -0.00442505, -0.00389099, -0.00427246, -0.00366211, -0.00366211, -0.00343323, -0.00389099, -0.00411987, -0.00404358, -0.00404358, -0.00274658, -0.00274658, -0.00198364, -0.00198364, -0.00198364, -0.00335693, -0.00282288, -0.00366211, -0.00411987, -0.00328064, -0.00305176, -0.00312805, -0.00305176, -0.00259399, -0.00167847, -0.00221252],
            "velocity": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767]
        }, {
            "name": "TRB31306",
            "temp": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            "rotationSpeed": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767],
            "acceleration": [-0.00465393, -0.00572205, -0.00526428, -0.00511169, -0.00564575, -0.00579834, -0.00556946, -0.00648499, -0.0063324, -0.00617981, -0.00541687, -0.00541687, -0.00480652, -0.00610352, -0.0062561, -0.00686646, -0.00617981, -0.00686646, -0.00579834, -0.00587463, -0.00617981, -0.00602722, -0.00595093, -0.00610352, -0.00656128, -0.0063324, -0.00717163, -0.00663757, -0.00694275, -0.00717163, -0.00762939, -0.00793457, -0.00900269, -0.00854492, -0.00778198, -0.00801086, -0.00701904, -0.00701904, -0.00747681, -0.00770569, -0.00778198, -0.00839233, -0.00801086, -0.00831604, -0.0075531, -0.00869751, -0.0075531, -0.00740051, -0.00724792, -0.00686646, -0.00656128, -0.0063324, -0.00556946, -0.00610352, -0.0063324, -0.00816345, -0.00770569, -0.00762939, -0.00747681, -0.00671387, -0.00595093, -0.00648499, -0.00572205, -0.00549316, -0.00495911, -0.00549316, -0.00587463, -0.00671387, -0.00556946, -0.00602722, -0.00541687, -0.00686646, -0.0063324, -0.00709534, -0.00648499, -0.00595093, -0.00617981, -0.00663757, -0.0063324, -0.00717163, -0.00610352, -0.00610352, -0.00572205, -0.00602722, -0.00534058, -0.00617981, -0.00572205, -0.0062561, -0.00556946, -0.00610352, -0.00564575, -0.00602722, -0.0062561, -0.00640869, -0.00617981, -0.00694275, -0.00671387, -0.00778198, -0.00816345, -0.00808716, -0.00747681, -0.00801086, -0.00785828, -0.00823975, -0.00816345, -0.00831604, -0.00785828, -0.00793457, -0.00801086, -0.00831604, -0.00785828, -0.00808716, -0.0075531, -0.0075531, -0.00732422, -0.00762939, -0.0063324, -0.00640869, -0.00587463, -0.00419617, -0.00434875, -0.00434875, -0.00534058, -0.00541687, -0.00556946, -0.00442505, -0.00450134, -0.0050354, -0.00564575, -0.0050354, -0.00534058, -0.00488281, -0.00480652, -0.00640869, -0.00740051, -0.00724792, -0.00694275, -0.00709534, -0.00617981, -0.0075531, -0.00801086, -0.00839233, -0.00770569, -0.00694275, -0.00701904, -0.00724792, -0.00724792, -0.00785828, -0.00701904, -0.00709534, -0.0075531, -0.00732422, -0.00801086, -0.0075531, -0.00679016, -0.00572205, -0.00564575, -0.00495911, -0.00511169, -0.00595093, -0.00640869, -0.00717163, -0.0075531, -0.00740051, -0.00762939, -0.00770569, -0.00694275, -0.00709534, -0.00717163, -0.00686646, -0.00732422, -0.00892639, -0.00938416, -0.00854492, -0.00793457, -0.00694275, -0.00679016, -0.0063324, -0.0063324, -0.0062561, -0.00663757, -0.00694275, -0.00823975, -0.00808716, -0.00740051, -0.00617981, -0.00556946, -0.00518799, -0.00526428, -0.00587463, -0.00587463, -0.00648499, -0.00740051, -0.00656128, -0.00663757, -0.00518799, -0.00488281, -0.00564575, -0.00656128, -0.00778198, -0.00831604, -0.00892639, -0.00930786, -0.00999451, -0.0088501, -0.00801086, -0.00740051, -0.00656128, -0.00694275, -0.00717163, -0.00801086, -0.00740051, -0.00801086, -0.00770569, -0.00869751, -0.00831604, -0.00823975, -0.00808716, -0.00907898, -0.00854492, -0.00900269, -0.00938416, -0.00946045, -0.00999451, -0.00968933, -0.00930786, -0.00839233, -0.00801086, -0.00717163, -0.00778198, -0.00732422, -0.00694275, -0.00671387, -0.00640869, -0.00701904, -0.00740051, -0.00793457, -0.00747681, -0.00732422, -0.00770569, -0.00816345, -0.00793457, -0.00801086, -0.0075531, -0.0075531, -0.0063324, -0.00717163, -0.00732422, -0.00793457, -0.00732422, -0.0075531, -0.00717163, -0.00740051, -0.00793457, -0.00862122, -0.00823975, -0.00785828, -0.00709534, -0.00709534, -0.00724792, -0.00785828, -0.00831604, -0.00808716, -0.00816345, -0.00778198, -0.00907898, -0.0087738, -0.00808716, -0.00816345, -0.00839233, -0.00816345, -0.00915527, -0.00984192, -0.00953674, -0.00953674, -0.00953674, -0.00862122, -0.00823975, -0.00816345, -0.00770569, -0.00663757, -0.00648499, -0.00679016, -0.00740051, -0.00770569, -0.00724792, -0.00694275, -0.00656128, -0.00686646, -0.00617981, -0.00724792, -0.00679016, -0.00663757, -0.00663757, -0.00732422, -0.00648499, -0.00724792, -0.00679016, -0.00793457, -0.00793457],
            "velocity": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 491.767, 536.473, 536.473, 491.767, 491.767, 491.767, 491.767, 491.767]
        }]
    }, {
        "msgType": "currentValue",
        "data": [{
            "name": "CRB2205",
            "amibent": {
                "currentValue": "20",
                "yellowWarning": "60",
                "redWarning": "80"
            },
            "bearingTemp": {
                "currentValue": "38.363",
                "yellowWarning": "60",
                "redWarning": "80"
            },
            "rotationSpeed": {
                "currentValue": 491.767,
                "yellowWarning": 2500,
                "redWarning": 3000,
            },
            "acceleration": {
                "currentValue": 210.12323,
                "yellowWarning": 20,
                "redWarning": 30,
            },
            "accumulated": {
                "currentValue": 0.0021,
                "yellowWarning": 100000,
                "redWarning": 20000,
            },
            "velocity": {
                "currentValue": 491.767,
                "yellowWarning": 280,
                "redWarning": 300,
            }
        }, {
            "name": "TRB31306",
            "amibent": {
                "currentValue": "20",
                "yellowWarning": "60",
                "redWarning": "80"
            },
            "roomTemp": {
                "currentValue": 20,
                "yellowWarning": 60,
                "redWarning": 80,
            },
            "bearingTemp": {
                "currentValue": 0,
                "yellowWarning": 60,
                "redWarning": 80,
            },
            "rotationSpeed": {
                "currentValue": 491.767,
                "yellowWarning": 2500,
                "redWarning": 3000,
            },
            "acceleration": {
                "currentValue": -0.00793457,
                "yellowWarning": 20,
                "redWarning": 30,
            },
            "accumulated": {
                "currentValue": 0,
                "yellowWarning": 100000,
                "redWarning": 20000,
            },
            "velocity": {
                "currentValue": 491.767,
                "yellowWarning": 280,
                "redWarning": 300,
            }
        }]
    }, {
        "msgType": "bearingFailed",
        "data": [{
            "name": "CRB2205",
            "roller": 0,
            "innerRing": 1,
            "outerRing": 0,
            "cage": 0
        }, {
            "name": "TRB31306",
            "roller": 0,
            "innerRing": 0,
            "outerRing": 0,
            "cage": 0
        }]
    }]

    console.log((new Date()) + ' Connection accepted.');

    // send back chat history
    if (history.length > 0) {
        connection.sendUTF(JSON.stringify({
            type: 'history',
            data: history
        }));
    }

    // user sent some message
    connection.on('message', function(message) {
        setInterval(function() {
                var aaa = (Math.random() * 100).toFixed(0);
                var bbb = JSON.stringify(sflData);
                // bbb[2].data[0].roomTemp.currentValue = aaa;
                connection.send(bbb);
            }, 3000)
            // if (message.type === 'utf8') { // accept only text
            //     if (userName === false) { // first message sent by user is their name
            //         // remember user name
            //         userName = htmlEntities(message.utf8Data);
            //         // get random color and send it back to the user
            //         userColor = colors.shift();
            //         // setInterval(function() {
            //         // connection.sendUTF(JSON.stringify({ type:'color', data: userColor }));
            //         // connection.sendUTF('当前服务时间： '+new Date().getTime());
            //         // }, 2000)
            //         console.log((new Date()) + ' User is known as: ' + userName +
            //             ' with ' + userColor + ' color.');
            //         setInterval(function() {
            //             connection.sendUTF(JSON.stringify(sflData));
            //
            //         }, 2000)
            //
            //     } else { // log and broadcast the message
            //         console.log((new Date()) + ' Received Message from ' +
            //             userName + ': ' + message.utf8Data);
            //
            //         // we want to keep history of all sent messages
            //         var obj = {
            //             time: (new Date()).getTime(),
            //             text: htmlEntities(message.utf8Data),
            //             author: userName,
            //             color: userColor
            //         };
            //         history.push(obj);
            //         history = history.slice(-100);
            //
            //         // broadcast message to all connected clients
            //         var json = JSON.stringify({
            //             type: 'message',
            //             data: obj
            //         });
            //         for (var i = 0; i < clients.length; i++) {
            //             clients[i].sendUTF(json);
            //         }
            //     }
            // }
    });

    // user disconnected
    connection.on('close', function(connection) {
        if (userName !== false && userColor !== false) {
            console.log((new Date()) + " Peer " +
                connection.remoteAddress + " disconnected.");
            // remove user from the list of connected clients
            clients.splice(index, 1);
            // push back user's color to be reused by another user
            colors.push(userColor);
        }
    });

});
